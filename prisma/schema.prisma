// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  firstname String
  lastname  String
  email     String    @unique
  password  String
  role      Roles     @default(USER)
  verified  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  reviews   Review[]
  comments  Comment[]
  //Permissions     Permissions? @relation(fields: [permissionsName], references: [name])
  //permissionsName String?
}

//user can read write,

model Review {
  id         String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  title      String
  content    String
  published  Boolean   @default(false)
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String
  comments   Comment[]
  realtorsId String?   @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  id         String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  title      String
  content    String
  published  Boolean   @default(false)
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String
  comments   Comment[]
  Realtors   Realtors? @relation(fields: [realtorsId], references: [id])
  realtorsId String?   @db.ObjectId
}

model Comment {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  review    Review   @relation(fields: [reviewId], references: [id])
  reviewId  String   @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Realtors {
  id               String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  agenttype        String
  companyName      String?
  firstname        String
  lastname         String
  registrationdate String
  reviews          Review[]
  faction          String
  Company   Company? @relation(fields: [companyId], references: [id])
  companyId String?  @db.ObjectId
}

model Company {
  id       String     @id @default(dbgenerated()) @map("_id") @db.ObjectId
  address  String
  agents   Realtors[]
  city     String
  name     String
  zip_code String
}

enum Roles {
  USER
  ADMIN
}

//model Permissions {
//  id      String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
//  permits String[]
//  name    String?  @default("READ")
//  Users   User[]
//}
